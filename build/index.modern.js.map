{"version":3,"file":"index.modern.js","sources":["../src/utils.js","../src/useGetSet.js","../src/index.js","../src/useForceUpdate.js"],"sourcesContent":["export const clamp = (min, max) => value => Math.max(min, Math.min(value, max));\nexport const identity = x => x;\nexport const noop = () => {};\nexport const compose = (...fns) =>\n  fns.reduce((f, g) => (...args) => f(g(...args)));\nexport const maybe = (f, g) => v =>\n  v === null || v === undefined ? f() : g(v);\nexport const snd = g => ([x, y]) => [x, g(y)];\nexport const toPair = v => [v, v];\n\nexport const getOffset = maybe(\n  () => ({ left: 0, top: 0 }),\n  compose(\n    ([el, { left, top }]) => ({\n      left: left + el.offsetLeft,\n      top: top + el.offsetTop\n    }),\n    snd(el => getOffset(el.offsetParent)),\n    toPair\n  )\n);\n\nexport const getPositionOnElement = compose(\n  ({ left, top }) => (x, y) => ({\n    x: x - left,\n    y: y - top\n  }),\n  getOffset\n);\n\nexport const isChildOf = (child, parent) =>\n  !!(child && parent) &&\n  (child === parent || isChildOf(child.parentElement, parent));\n","import { useCallback, useRef } from \"react\";\n\nconst useGetSet = initialValue => {\n  const ref = useRef(initialValue);\n  const get = useCallback(() => ref.current, []);\n  const set = useCallback(value => {\n    ref.current = typeof value === \"function\" ? value(ref.current) : value;\n\n    return ref.current;\n  }, []);\n\n  return [get, set];\n};\n\nexport default useGetSet;\n","import { useCallback, useEffect, useRef } from \"react\";\n\nimport * as _ from \"./utils\";\n\nimport useGetSet from \"./useGetSet\";\nimport useForceUpdate from \"./useForceUpdate\";\n\nconst usePanZoom = ({\n  enablePan = true,\n  enableZoom = true,\n  requireCtrlToZoom = false,\n  panOnDrag = true,\n  preventClickOnPan = true,\n  zoomSensitivity = 0.01,\n  scrollPanSensitivity = 1,\n  minZoom = 0,\n  maxZoom = Infinity,\n  minX = -Infinity,\n  maxX = Infinity,\n  minY = -Infinity,\n  maxY = Infinity,\n  initialZoom = 1,\n  initialPan = { x: 0, y: 0 },\n  onPanStart = _.noop,\n  onPan = _.noop,\n  onPanEnd = _.noop,\n  onZoom = _.noop\n}) => {\n  const container = useRef(null);\n  const forceUpdate = useForceUpdate();\n  const wasPanning = useRef(false);\n  const prev = useRef([]);\n  const prevZoom = useRef(1);\n  const [getCenter, setCenter] = useGetSet({ top: 0, left: 0 });\n\n  const [isPanning, setPanning] = useGetSet(false);\n  const [getTransform, _setTransform] = useGetSet({\n    ...initialPan,\n    zoom: initialZoom\n  });\n\n  const clampX = useCallback(_.clamp(minX, maxX), [minX, maxX]);\n  const clampY = useCallback(_.clamp(minY, maxY), [minY, maxY]);\n  const clampZoom = useCallback(_.clamp(minZoom, maxZoom), [minZoom, maxZoom]);\n\n  const setTransform = useCallback(v => {\n    const r = _setTransform(v);\n    const { x, y, zoom } = getTransform();\n    setCenter({\n      top: (container.current.offsetHeight / 2 - y) / zoom,\n      left: (container.current.offsetWidth / 2 - x) / zoom\n    });\n    forceUpdate();\n    return r;\n  }, []);\n\n  const setPan = useCallback(\n    f =>\n      setTransform(({ x, y, zoom }) => {\n        const newPan = typeof f === \"function\" ? f({ x, y }) : f;\n\n        return {\n          x: clampX(newPan.x),\n          y: clampY(newPan.y),\n          zoom\n        };\n      }),\n    [minX, maxX, minY, maxY]\n  );\n\n  const setZoom = useCallback(\n    (f, maybeCenter) =>\n      setTransform(({ x, y, zoom }) => {\n        const newZoom = clampZoom(typeof f === \"function\" ? f(zoom) : f);\n\n        const center = _.maybe(\n          () => ({\n            x: container.current.offsetWidth / 2,\n            y: container.current.offsetHeight / 2\n          }),\n          _.identity\n        )(maybeCenter);\n\n        return {\n          x: clampX(x + ((center.x - x) * (zoom - newZoom)) / zoom),\n          y: clampY(y + ((center.y - y) * (zoom - newZoom)) / zoom),\n          zoom: newZoom\n        };\n      }),\n    [minX, maxX, minY, maxY, minZoom, maxZoom]\n  );\n\n  const startPanZoom = useCallback(\n    pointers => {\n      if (enablePan) {\n        prev.current = pointers;\n\n        setPanning(true);\n\n        onPanStart(pointers);\n      }\n    },\n    [enablePan, onPanStart]\n  );\n\n  const movePanZoom = useCallback(\n    pointers => {\n      if (isPanning()) {\n        wasPanning.current = true;\n\n        const prevPointers = prev.current;\n        prev.current = pointers;\n\n        setPan(({ x, y }) => {\n          let dx = 0,\n            dy = 0;\n          const l = Math.min(pointers.length, prevPointers.length);\n\n          for (let i = 0; i < l; i++) {\n            dx += pointers[i].x - prevPointers[i].x;\n            dy += pointers[i].y - prevPointers[i].y;\n          }\n\n          return {\n            x: x + dx / l,\n            y: y + dy / l\n          };\n        });\n\n        onPan(pointers);\n      }\n    },\n    [isPanning, onPan, minX, maxX, minY, maxY]\n  );\n\n  const endPanZoom = useCallback(() => {\n    if (isPanning()) {\n      setPanning(false);\n      onPanEnd();\n    }\n  }, [onPanEnd]);\n\n  const onClickCapture = useCallback(\n    event => {\n      if ((preventClickOnPan, wasPanning.current)) {\n        wasPanning.current = false;\n        event.stopPropagation();\n      }\n    },\n    [preventClickOnPan]\n  );\n\n  const onWheel = useCallback(\n    event => {\n      if (enableZoom && container.current) {\n        event.preventDefault();\n        if (!requireCtrlToZoom || event.ctrlKey) {\n          const { pageX, pageY, deltaY } = event;\n          const pointerPosition = _.getPositionOnElement(container.current)(\n            pageX,\n            pageY\n          );\n\n          setZoom(\n            zoom => zoom * Math.pow(1 - zoomSensitivity, deltaY),\n            pointerPosition\n          );\n\n          onZoom();\n        } else {\n          const { deltaX, deltaY } = event;\n          setPan(({ x, y }) => ({\n            x: x - deltaX,\n            y: y - deltaY\n          }));\n        }\n      }\n    },\n    [\n      enableZoom,\n      onZoom,\n      minX,\n      maxX,\n      minY,\n      maxY,\n      minZoom,\n      maxZoom,\n      scrollPanSensitivity,\n      setPan\n    ]\n  );\n\n  const onGestureStart = useCallback(event => {\n    event.preventDefault();\n    prevZoom.current = getTransform().zoom;\n  }, []);\n\n  const onGesture = useCallback(event => {\n    event.preventDefault();\n\n    const { pageX, pageY, scale } = event;\n    const pointerPosition = getPositionOnElement(container.current)(\n      pageX,\n      pageY\n    );\n\n    setZoom(prevZoom.current * scale, pointerPosition);\n\n    onZoom();\n  }, []);\n\n  const setContainer = useCallback(el => {\n    if (el) {\n      el.addEventListener(\"wheel\", onWheel);\n      el.addEventListener(\"gesturestart\", onGestureStart);\n      el.addEventListener(\"gesturechange\", onGesture);\n      el.addEventListener(\"gestureend\", onGesture);\n    } else if (container.current) {\n      return () => {\n        container.current.removeEventListener(\"wheel\", onWheel);\n        container.current.removeEventListener(\"gesturestart\", onGestureStart);\n        container.current.removeEventListener(\"gesturechange\", onGesture);\n        container.current.removeEventListener(\"gestureend\", onGesture);\n      };\n    }\n    container.current = el;\n  }, []);\n\n  useEffect(() => {\n    if (container.current) {\n      container.current.addEventListener(\"wheel\", onWheel);\n      container.current.addEventListener(\"gesturestart\", onGestureStart);\n      container.current.addEventListener(\"gesturechange\", onGesture);\n      container.current.addEventListener(\"gestureend\", onGesture);\n      return () => {\n        container.current.removeEventListener(\"wheel\", onWheel);\n        container.current.removeEventListener(\"gesturestart\", onGestureStart);\n        container.current.removeEventListener(\"gesturechange\", onGesture);\n        container.current.removeEventListener(\"gestureend\", onGesture);\n      };\n    }\n  }, []);\n\n  const onTouchStart = ({ touches }) =>\n    startPanZoom(\n      [...touches].map(({ pageX, pageY }) => ({ x: pageX, y: pageY }))\n    );\n  const onTouchMove = ({ touches }) =>\n    movePanZoom(\n      [...touches].map(({ pageX, pageY }) => ({ x: pageX, y: pageY }))\n    );\n  const onTouchEnd = () => endPanZoom();\n  const onTouchCancel = () => endPanZoom();\n  const onMouseDown = ({ pageX, pageY }) =>\n    startPanZoom([{ x: pageX, y: pageY }]);\n  const onMouseMove = ({ pageX, pageY }) =>\n    movePanZoom([{ x: pageX, y: pageY }]);\n  const onMouseUp = () => endPanZoom();\n  const onMouseLeave = () => endPanZoom();\n\n  const transform = getTransform();\n  return {\n    container,\n    setContainer,\n    transformStyle: `translate3D(${transform.x}px, ${transform.y}px, 0) scale(${transform.zoom})`,\n    transform: transform,\n    center: getCenter(),\n    pan: { x: transform.x, y: transform.y },\n    zoom: transform.zoom,\n    setPan,\n    setZoom,\n    panZoomHandlers: panOnDrag\n      ? {\n          onTouchStart,\n          onTouchMove,\n          onTouchEnd,\n          onTouchCancel,\n          onMouseDown,\n          onMouseMove,\n          onMouseUp,\n          onMouseLeave,\n          onClickCapture\n        }\n      : {}\n  };\n};\n\nexport default usePanZoom;\n","import { useCallback, useState } from \"react\";\n\nexport default () => {\n  const [, dispatch] = useState(Object.create(null));\n\n  const memoizedDispatch = useCallback(() => {\n    dispatch(Object.create(null));\n  }, [dispatch]);\n\n  return memoizedDispatch;\n};\n"],"names":["g","clamp","min","max","value","Math","identity","x","noop","compose","fns","reduce","f","maybe","v","getOffset","left","top","el","offsetLeft","offsetTop","offsetParent","getPositionOnElement","y","useGetSet","initialValue","ref","useRef","useCallback","current","dispatch","enablePan","enableZoom","requireCtrlToZoom","panOnDrag","preventClickOnPan","zoomSensitivity","scrollPanSensitivity","minZoom","maxZoom","Infinity","minX","maxX","minY","maxY","initialZoom","initialPan","onPanStart","_","onPan","onPanEnd","onZoom","container","forceUpdate","useState","Object","create","wasPanning","prev","prevZoom","getCenter","setCenter","isPanning","setPanning","zoom","getTransform","_setTransform","clampX","clampY","clampZoom","setTransform","r","offsetHeight","offsetWidth","setPan","newPan","setZoom","maybeCenter","newZoom","center","startPanZoom","pointers","movePanZoom","prevPointers","dx","dy","l","length","i","endPanZoom","onClickCapture","event","stopPropagation","onWheel","preventDefault","ctrlKey","pageX","pageY","deltaY","pointerPosition","pow","deltaX","onGestureStart","onGesture","scale","setContainer","addEventListener","removeEventListener","useEffect","transform","transformStyle","pan","panZoomHandlers","onTouchStart","touches","map","onTouchMove","onTouchEnd","onTouchCancel","onMouseDown","onMouseMove","onMouseUp","onMouseLeave"],"mappings":"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"}